name: Deploy Application 🐋

on:
  push:
    tags:
      - "*.*.*"

jobs:
  ci:
    name: 🛠️ Build
    runs-on: ubuntu-latest

    steps:
      - name: 🔽 Checkout
        uses: actions/checkout@v4

      - name: Install NodeJS!
        run: |
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.2/install.sh | bash
          \. "$HOME/.nvm/nvm.sh"
          nvm install 22
          node -v
          npm -v

      - name: Install Yarn
        run: |
          npm i -g yarn

      - name: Install Dependencies
        run: |
          yarn install

      - name: 🛠️ Build Application
        run: |
          mv .env.cloud .env
          yarn build

      - name: 🛠️ Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: dist/

  docker:
    name: 🐋 Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: ci

    steps:
      - name: 🔽 Checkout
        uses: actions/checkout@v4

      - name: 🛠️ Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: dist/

      - name: 🛠️ Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/russian-cheatsheet-front:${{ github.ref_name }} .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 🛠️ Push Docker Image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/russian-cheatsheet-front:${{ github.ref_name }}

  deploy:
    name: 🚀 Deploy Application
    runs-on: ubuntu-latest
    needs: docker

    steps:
      - name: 🔽 Checkout
        uses: actions/checkout@v4

      - name: 🚀 Deploy
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > id_rsa
          chmod 600 id_rsa
          cat ./deploy/compose.yaml | ssh -o StrictHostKeyChecking=no -i id_rsa -p ${{ secrets.SSH_PORT }} \
            ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} \
            "docker pull ${{ secrets.DOCKER_USERNAME }}/russian-cheatsheet-front:${{ github.ref_name }} && \
              export VERSION=${{ github.ref_name }} && \
            docker compose -f - up -d --force-recreate"
          rm id_rsa